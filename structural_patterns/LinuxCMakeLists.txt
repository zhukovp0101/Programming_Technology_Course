cmake_minimum_required (VERSION 3.8)
project(Game)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

#file(GLOB_RECURSE MAIN_SOURCES *.cpp *.h)

add_subdirectory(Libs/googletest-master)
include_directories(Libs/googletest-master/googletest/include)
include_directories(Libs/googletest-master/googlemock/include)

project(Game)

set(CMAKE_CXX_STANDARD 11)
set(EXECUTABLE_NAME "Game")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
include_directories(Classes/Scene/ Classes/Object/ Classes/GUI/ Classes/Building/ Classes/Unit Classes/Tools Classes Tests)
add_executable (Game Classes/Object/IObject.cpp Classes/Object/IObject.h main.cpp Classes/Scene/Scene.cpp Classes/Scene/Scene.h Classes/Building/Castle.cpp Classes/Building/Castle.h Classes/Object/ILivingObject.cpp Classes/Object/ILivingObject.h Classes/Building/IBuilding.cpp Classes/Building/IBuilding.h Classes/Scene/Level.cpp Classes/Scene/Level.h Classes/Scene/Menu.cpp Classes/Scene/Menu.h Classes/GUI/Button.cpp Classes/GUI/Button.h Classes/Object/IEventObject.cpp Classes/Object/IEventObject.h Classes/Unit/Unit.cpp Classes/Unit/Unit.h Classes/BaseIncludes.h Classes/GUI/IMenuItem.cpp Classes/GUI/IMenuItem.h Classes/Tools/Parser.cpp Classes/Tools/Parser.h Classes/GUI/ItemFactory.cpp Classes/GUI/ItemFactory.h Tests/BaseTestIncludes.h Tests/Normal/Tests.cpp )

include_directories(${CMAKE_CURRENT_BINARY_DIR})
include_directories("/home/zhukovp0101/MyDocs/MIPT/2term/TP/Game/")
# Detect and add SFML
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake_modules" ${CMAKE_MODULE_PATH})
find_package(SFML 2 REQUIRED system window graphics network audio)
if(SFML_FOUND)
    include_directories(${SFML_INCLUDE_DIR})
    target_link_libraries(Game ${SFML_LIBRARIES})
endif()

target_link_libraries(Game gtest gtest_main)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++0x")

#add_custom_target(
#    RUN_X11 ALL
#    echo "kjcbhscjb"
##    export DISPLAY=:0
#)